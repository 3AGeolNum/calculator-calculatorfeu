cmake_minimum_required(VERSION 3.10)

if(NOT TARGET calculatorlib)
	project(FireCalculatorCMake VERSION 1.0)
	find_package(FireCalculatorCMake REQUIRED CONFIG)
	enable_testing()
endif()

add_executable(test_Tree test_Tree.cpp)
target_link_libraries(test_Tree PUBLIC calculatorlib)
add_test(NAME test_Tree COMMAND test_Tree)

add_executable(test_Process test_Process.cpp)
target_link_libraries(test_Process PUBLIC calculatorlib)
add_test(NAME test_Process COMMAND test_Process)

add_executable(test_remove_space test_remove_space.cpp)
target_link_libraries(test_remove_space PUBLIC calculatorlib)
add_test(NAME test_remove_space COMMAND test_remove_space)

add_executable(test_is_input_empty test_is_input_empty.cpp)
target_link_libraries(test_is_input_empty PUBLIC calculatorlib)
add_test(NAME test_is_input_empty COMMAND test_is_input_empty)

add_executable(test_start_with_operator test_start_with_operator.cpp)
target_link_libraries(test_start_with_operator PUBLIC calculatorlib)
add_test(NAME test_start_with_operator COMMAND test_start_with_operator)

add_executable(test_end_with_operator test_end_with_operator.cpp)
target_link_libraries(test_end_with_operator PUBLIC calculatorlib)
add_test(NAME test_end_with_operator COMMAND test_end_with_operator)

add_executable(test_validity_characters test_validity_characters.cpp)
target_link_libraries(test_validity_characters PUBLIC calculatorlib)
add_test(NAME test_validity_characters COMMAND test_validity_characters)

add_executable(test_two_successive_operator test_two_successive_operator.cpp)
target_link_libraries(test_two_successive_operator PUBLIC calculatorlib)
add_test(NAME test_two_successive_operator COMMAND test_two_successive_operator)

add_executable(test_replace_comma test_replace_comma.cpp)
target_link_libraries(test_replace_comma PUBLIC calculatorlib)
add_test(NAME test_replace_comma COMMAND test_replace_comma)

add_executable(test_remove_two_minus_beginning test_remove_two_minus_beginning.cpp)
target_link_libraries(test_remove_two_minus_beginning PUBLIC calculatorlib)
add_test(NAME test_remove_two_minus_beginning COMMAND test_remove_two_minus_beginning)

add_executable(test_remove_non_operator_minus test_remove_non_operator_minus.cpp)
target_link_libraries(test_remove_non_operator_minus PUBLIC calculatorlib)
add_test(NAME test_remove_non_operator_minus COMMAND test_remove_non_operator_minus)

add_executable(test_transform_minus test_transform_minus.cpp)
target_link_libraries(test_transform_minus PUBLIC calculatorlib)
add_test(NAME test_transform_minus COMMAND test_transform_minus)

add_executable(test_transform_divide test_transform_divide.cpp)
target_link_libraries(test_transform_divide PUBLIC calculatorlib)
add_test(NAME test_transform_divide COMMAND test_transform_divide)

add_executable(test_remove_following_underscore test_remove_following_underscore.cpp)
target_link_libraries(test_remove_following_underscore PUBLIC calculatorlib)
add_test(NAME test_remove_following_underscore COMMAND test_remove_following_underscore)

add_executable(test_add_zero_before_point test_add_zero_before_point.cpp)
target_link_libraries(test_add_zero_before_point PUBLIC calculatorlib)
add_test(NAME test_add_zero_before_point COMMAND test_add_zero_before_point)

add_executable(test_add_zero_after_point test_add_zero_after_point.cpp)
target_link_libraries(test_add_zero_after_point PUBLIC calculatorlib)
add_test(NAME test_add_zero_after_point COMMAND test_add_zero_after_point)

add_executable(test_two_dots_before_operator test_two_dots_before_operator.cpp)
target_link_libraries(test_two_dots_before_operator PUBLIC calculatorlib)
add_test(NAME test_two_dots_before_operator COMMAND test_two_dots_before_operator)